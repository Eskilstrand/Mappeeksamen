print()
cyclingstudy |>
select(group, age, height.T1, weight) |>
summarise(n = n(),
.by = c(group),
) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(n = n(),
.by = c(group),
) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(n = n(),
.by = c(group),
m = mean(age)
) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(n = n(),
.by = c(group),
m = mean(age, na.rm = TRUE)
) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(n = n(),
.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE)) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
print()
glimpse cyclingstudy
glimpse(cyclingstudy)
cyclingstudy |>
select(group, age, height.T1, weight.T1) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
filter(timepoint == "pre") |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
filter(timepoint == "pre") |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
filter(timepoint == "pre") |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
filter(timepoint == ("pre")) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
group_by(timepoint) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
group_by(timepoint) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
print()
cyclingstudy |>
select(group, age, height.T1, weight.T1, timepoint) |>
filter(timepoint == ("pre")) |>
summarise(.by = c(group),
m.age = mean(age, na.rm = TRUE),
sd.age = sd(age, na.rm = TRUE),
m.height = mean(height.T1, na.rm = TRUE),
sd.height = sd(height.T1, na.rm = TRUE),
m.weight = mean(weight.T1, na.rm = TRUE),
sd.weight = sd(weight.T1, na.rm = TRUE),
n = n(),) |>
print()
df |>
summary()
df |>
select(id, timepoint, la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
distinct(timepoint) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = id,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = id,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
pivot_longer(values_to = "la.max",
names_to = "timepoint",
cols = t1:t4) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
pivot_longer(values_to = "la.max",
names_to = "timepoint",
cols = t1:t4) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
pivot_longer(values_to = "la.max",
names_to = "timepoint",
cols = t1:t4) |>
arrange(timepoint) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
df |>
select(id, timepoint, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
pivot_longer(values_to = "la.max",
names_to = "timepoint",
cols = t3:t2) |>
arrange(timepoint) |>
print()
df |>
gt()
df |>
gt() |>
arrange(-w.max)
df |>
print() |>
arrange(-w.max) |>
gt()
df |>
print() |>
arrange(-w.max) |>
gt()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t1 - trial2) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t1 - trial2) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t1 - trial2) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t1 - trial2) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t1 - trial2) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
# Change/difference score
mutate(diff = t2 - t1) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) %>%
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
print()
df$timepoint
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = "t"2" - "t1"") |>
summarise(s = round(sd(diff), 1),
# the typical error.
te = round(s / sqrt(2), 1)) %>%
# Round is used to get less decimal places...
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = "t2" - "t1") |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
print()
mutate(diff = (t2 - t1) |>
print()
df |>
df |>
select(timepoint, id, la.max, vo2.max) |>
mutate(diff = (t2 - t1)) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
print()
cv_percent <-  round(cv$cv,1)
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
print()
# Chunk 1
# Set a seed for the random number generator
set.seed(1)
# Generate 10 random numbers from a normal distribution with mean 0 and SD 1
x <- rnorm(10)
# Calculate summary statistics
summary(x)
fivenum(x)
quantile(x)
# Chunk 2
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(magrittr)
library(gt)
df <- read_xlsx("data/o2-test.xlsx")
df %>%
summarise(minimum = min(vo2.max),
maksimum = max(vo2.max),
gjennomsnitt = mean(vo2.max),
kvartil = quantile(vo2.max),
standardavvik = sd(vo2.max)) %>%
gt()
# Chunk 3
x <- c(rnorm(10), NA)
mean(x)
mean(x, na.rm = TRUE)
# Chunk 4
library(exscidata)
cyclingstudy %>%
summarise(m = mean(VO2.max, na.rm = TRUE),
sd = sd(VO2.max, na.rm = TRUE)) %>%
gt() %>%
fmt_number(columns = m,
decimals = 0) %>%
fmt_number(columns = sd,
decimals = 1) %>%
cols_label(m = "Gjennomsnitt",
sd = "Â±") %>%
mutate(m_s = paste0(signif(m, 5), " (", signif (s, 5), ") "))
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
summarise(s = round(sd(diff), 1),
# the typical error.
te = round(s / sqrt(2), 1)) %>%
# Round is used to get less decimal places...
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1, na.rm = TRUE) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
summarise(s = round(sd(diff), 1),
# the typical error.
te = round(s / sqrt(2), 1)) %>%
# Round is used to get less decimal places...
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
summarise(s = round(sd(diff), 1),
# the typical error.
te = round(s / sqrt(2), 1)) %>%
# Round is used to get less decimal places...
print()
df |>
select(id, timepoint, la.max, vo2.max) |>
mutate(diff = t2 - t1) |>
summarise(s = sd(diff),
te = s / sqrt(2)) |>
summarise(s = round(sd(diff), 1),
# the typical error.
te = round(s / sqrt(2), 1)) %>%
# Round is used to get less decimal places...
print()
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
print()
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
print()
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = vo2.max) |>
print()
cv <- df |>
select(timepoint, id, la.max, vo2.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
cv <- df |>
select(timepoint, id, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
mutate(diff = t2 - t1) |>
summarise(m = mean(c(t1, t2), na.rm = TRUE),
s = sd(diff, na.rm = TRUE),
te = s / sqrt(2),
cv = 100 * (te/m)) |>
print()
cv <- df |>
select(timepoint, id, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
cv <- df |>
select(timepoint, id, la.max, na.rm = TRUE) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
cv <- df |>
select(timepoint, id, la.max) |>
pivot_wider(names_from = timepoint,
values_from = la.max) |>
print()
