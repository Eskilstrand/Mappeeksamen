ggplot(aes(TRAINING_AGE, TESTOSTERONE_T1)) +
labs(x = "Treningsalder (år)",
y = expression(Testosteronverdier ~ ng %.% dl^{-1})) +
# use expression for superscript
geom_point(size = 3, shape = 21, fill = "orange") +
geom_abline(intercept = coef(m)[1], slope = coef(m)[2], color = "steelblue", size = 1) +
geom_hline(yintercept = coef(m)[1] + coef(m)[2] * 10, color = "darkgreen") +
geom_vline(xintercept = 10, color = "darkred") +
scale_y_continuous(breaks = c(200, 354, 400, 600, 800, 1000),
labels = c(200, "testo10", 400, 600, 800, 1000)) +
theme_bw()
# Den lineære modellen forteller i dette tilfellet at for hvert år man trener, så vil nivå av testosterone synke med 20.51 ng*dl<sup>-1</sup>. I tillegg kan man estimere testonivå etter å ha trent i 10 år. Dette vil vi gjøre med følgende utregning:
testo10 <- coef(m)[1] + coef(m)[2] * 10
testo10rounded <- round(testo10, 2)
# testosteronnivå etter 10 år med trening estimeres til 354.26 ng*dl^-1
m
testo10
summary(m)
ggplot(aes(watt, lac, group = subject),
labs(x = "Watt",
y = "Laktat")) +
geom_point(size = 3, shape = 21, fill = "gold") +
geom_line(lty = 2) +
geom_smooth(method = lm, se = FALSE) +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 2), color = "lightgreen") +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3), color = "lightpink") +
coord_cartesian(xlim = c(220, 380)) +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = 4, color = "purple") +
# Legger inn en vertikal linje, med y = 2mmol, skjæringspunkt 308W, tatt på øyemål.
geom_vline(xintercept = 309, linewidth = 1, alpha = 0.8) +
# Legger inn en vertikal linje med y = 4mmol, skjæringspunkt 342W, tatt på øyemål.
geom_vline(xintercept = 342, linewidth = 1, alpha = 0.8) +
theme_minimal()
w |>
ggplot(aes(watt, lac, group = subject),
labs(x = "Watt",
y = "Laktat")) +
geom_point(size = 3, shape = 21, fill = "gold") +
geom_line(lty = 2) +
geom_smooth(method = lm, se = FALSE) +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 2), color = "lightgreen") +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3), color = "lightpink") +
coord_cartesian(xlim = c(220, 380)) +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = 4, color = "purple") +
# Legger inn en vertikal linje, med y = 2mmol, skjæringspunkt 308W, tatt på øyemål.
geom_vline(xintercept = 309, linewidth = 1, alpha = 0.8) +
# Legger inn en vertikal linje med y = 4mmol, skjæringspunkt 342W, tatt på øyemål.
geom_vline(xintercept = 342, linewidth = 1, alpha = 0.8) +
theme_minimal()
ggplot(aes(watt, lac, group = subject),
labs(x = "Watt",
y = "Laktat")) +
geom_point(size = 3, shape = 21, fill = "gold") +
geom_line(lty = 2) +
geom_smooth(method = lm, se = FALSE) +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 2), color = "lightgreen") +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3), color = "lightpink") +
coord_cartesian(xlim = c(220, 380)) +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = 4, color = "purple") +
# Legger inn en vertikal linje, med y = 2mmol, skjæringspunkt 308W, tatt på øyemål.
geom_vline(xintercept = 309, linewidth = 1, alpha = 0.8) +
# Legger inn en vertikal linje med y = 4mmol, skjæringspunkt 342W, tatt på øyemål.
geom_vline(xintercept = 342, linewidth = 1, alpha = 0.8) +
theme_minimal()
cyclingstudy |>
select(subject, group, timepoint, lac.225:lac.375) |>
filter(timepoint == "pre", subject == 10) |>
pivot_longer(names_to = "watt",
values_to = "lac",
names_prefix = "lac.",
names_transform = list(watt = as.numeric),
cols = lac.225:lac.375)
mod <- lm(lac ~ watt, data = w)
w |>
ggplot(aes(watt, lac, group = subject)) +
labs(x = "Watt",
y = "Laktat") +
geom_point(size = 3, shape = 21, fill = "gold") +
geom_line(lty = 2) +
geom_smooth(method = lm, se = FALSE) +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 2), color = "lightgreen") +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3), color = "lightpink") +
coord_cartesian(xlim = c(220, 380)) +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = 4, color = "purple") +
# Legger inn en vertikal linje, med y = 2mmol, skjæringspunkt 308W, tatt på øyemål.
geom_vline(xintercept = 309, linewidth = 1, alpha = 0.8) +
# Legger inn en vertikal linje med y = 4mmol, skjæringspunkt 342W, tatt på øyemål.
geom_vline(xintercept = 342, linewidth = 1, alpha = 0.8) +
theme_minimal()
setwd("~/01-R Studio projects/Mappeeksamen")
En regresjonsmodell er en modell som kvantifiserer forholdet mellom en eller flere uavhengige variabler og en avhengig variabel. Innen medisin er regresjon den analysemtoden som er hyppigst anvendt. Det finnes forskjellige regresjonsmodeller. De vanligste er lineær regresjon, polynominal regresjon og logistisk regresjon. Hva man har av datasett vil bestemme hvilken regresjonsmodell som egner seg best å benytte [@Pisica2022].
# Chunk 1
#| message: false
#| warning: false
#| code-fold: true
#| fig-cap: "Figur 1: Gule punkter = laktat og watt, blå linje = lineær regresjon, grønn linje = andregradsligning, rosa = tredjegradsligning."
library(readxl)
library(tidyr)
library(exscidata)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(magrittr)
library(gt)
library(ggtext)
# Kalkuler treningsintensitet ved 2 og 4 mmol/L
w <- cyclingstudy |>
select(subject, group, timepoint, lac.225:lac.375) |>
filter(timepoint == "pre", subject == 10) |>
pivot_longer(names_to = "watt",
values_to = "lac",
names_prefix = "lac.",
names_transform = list(watt = as.numeric),
cols = lac.225:lac.375)
mod <- lm(lac ~ watt, data = w)
w |>
ggplot(aes(watt, lac, group = subject)) +
labs(x = "Watt",
y = "Laktat") +
geom_point(size = 3, shape = 21, fill = "gold") +
geom_line(lty = 2) +
geom_smooth(method = lm, se = FALSE) +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 2), color = "lightgreen") +
geom_smooth(method = lm, se = FALSE, formula = y ~ poly(x, 3), color = "lightpink") +
coord_cartesian(xlim = c(220, 380)) +
geom_hline(yintercept = 2, color = "red") +
geom_hline(yintercept = 4, color = "purple") +
# Legger inn en vertikal linje, med y = 2mmol, skjæringspunkt 308W, tatt på øyemål.
geom_vline(xintercept = 309, linewidth = 1, alpha = 0.8) +
# Legger inn en vertikal linje med y = 4mmol, skjæringspunkt 342W, tatt på øyemål.
geom_vline(xintercept = 342, linewidth = 1, alpha = 0.8) +
theme_minimal()
x2lac <- (2 - coef(mod)[1]) / coef(mod)[2]
x4lac <- (4 - coef(mod)[1]) / coef(mod)[2]
# Chunk 2
#| code-fold: true
#| echo: false
#reliabilitet
x2lac <- (2 - coef(mod)[1]) / coef(mod)[2]
x4lac <- (4 - coef(mod)[1]) / coef(mod)[2]
slac2 <- 309
slac4 <- 342
reldf <- data.frame(c(x2lac, x4lac, slac2, slac4))
diff2 <- slac2 - x2lac
diff4 <- x4lac - slac4
# Chunk 3
#| code-fold: true
#| message: false
#| warning: false
ladder <- data.frame(dist = c(374.5, 396.5, 423.5, 458.5, 496.5, 547.5,607.5,688.5,734.5,792.5,860.5,936.5,1035.5),
mw = c(1000, 900, 800,
700, 600, 500,
400, 300, 250,
200, 150, 100, 50))
# Create a new data frame of unknowns
unknown <- data.frame(dist = c(1208.5, 600.5, 18.5, 383.5, 408.5, 436.5, 470.5, 508.5, 559.5, 618.5, 696.5, 742.5, 798.5, 862.5, 935.5, 993.5))
# Fit the model
cal <- lm(log(mw) ~ dist, data = ladder)
preds <- exp(predict(cal, newdata = unknown))
ladder %>%
ggplot(aes(dist, log(mw))) +
geom_point() +
geom_abline(intercept = coef(cal)[1], slope = coef(cal)[2])
dataframe2 <- data.frame(unknowns = c(1208.5, 600.5, 18.5, 383.5, 408.5, 436.5, 470.5, 508.5, 559.5, 618.5, 696.5, 742.5, 798.5, 862.5, 935.5, 993.5),
(preds))
dataframe2 |> gt()
# Chunk 4: "tolkning av regresjonsmodell"
#| code-fold: true
#| warning: false
#| message: false
#| fig-cap: "Figur 3: Sammenheng mellom treningsalder og testosteronverdier i blodet"
#| label: "tolkning av regresjonsmodell"
library(exscidata)
library(tidyverse)
# sammenheng mellom tykkelse vastus lateralis t2 og konsentrasjon av testosterone ved t2
dat <- hypertrophy |>
select(GROUP, TRAINING_AGE, AGE, CLUSTER, VL_T2, TESTOSTERONE_T1, TESTOSTERONE_T2)
m <- lm(TESTOSTERONE_T1 ~ TRAINING_AGE, dat)
dat |>
ggplot(aes(TRAINING_AGE, TESTOSTERONE_T1)) +
labs(x = "Treningsalder (år)",
y = expression(Testosteronverdier ~ ng %.% dl^{-1})) +
# use expression for superscript
geom_point(size = 3, shape = 21, fill = "orange") +
geom_abline(intercept = coef(m)[1], slope = coef(m)[2], color = "steelblue", size = 1) +
geom_hline(yintercept = coef(m)[1] + coef(m)[2] * 10, color = "darkgreen") +
geom_vline(xintercept = 10, color = "darkred") +
scale_y_continuous(breaks = c(200, 354, 400, 600, 800, 1000),
labels = c(200, "testo10", 400, 600, 800, 1000)) +
theme_bw()
# Den lineære modellen forteller i dette tilfellet at for hvert år man trener, så vil nivå av testosterone synke med 20.51 ng*dl<sup>-1</sup>. I tillegg kan man estimere testonivå etter å ha trent i 10 år. Dette vil vi gjøre med følgende utregning:
testo10 <- coef(m)[1] + coef(m)[2] * 10
testo10rounded <- round(testo10, 2)
# testosteronnivå etter 10 år med trening estimeres til 354.26 ng*dl^-1
set.seed(1)
set.seed(1)
# Population
A <- rnorm(1000, mean = 100, sd = 10)
B <- rnorm(1000, mean = 92, sd = 10)
# Sample
a <- sample(A, 15, replace = FALSE)
b <- sample(B, 15, replace = FALSE)
t.test(a, b, paired = FALSE)
library(tidyverse)
differences <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 30, replace = FALSE)
differences[i] <- mean(samp[1:15]) - mean(samp[16:30])
}
data.frame(differences) %>%
ggplot(aes(differences)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
for(i in 1:3) {
print(i)
sys.sleep(3)
}
for(i in 1:3) {
print(i)
sys.sleep(3)
}
Sys.sleep(3)
for(i in 1:3) {
print(i)
Sys.sleep(3)
}
data.frame(differences)
t.test(differences)
t.test.res <- t.test(differences)
t.test.res$p.value
data.frame(differences) |>
filter(differences > mean(a) - mean(b))
data.frame(differences) |>
filter(differences >= mean(a) - mean(b))
data.frame(differences) |>
filter(differences >= mean(a) - mean(b)) |>
print()
extreme_diffs <- data.frame(differences) |>
filter(differences >= mean(a) - mean(b)) |>
pull(differences)
p <- length(extreme_diffs) / 1000
t.test(extreme_diffs)
t.test.res <- t.test(differences)
t.test.res$p.value
p_onetailed <- length(extreme_diffs) / 1000
extreme_diffs <- data.frame(differences) |>
filter(abs(differences >= mean(a) - mean(b))) |>
pull(differences)
extreme_diffs <- data.frame(differences) |>
filter(abs(differences >= mean(a) - mean(b))) |>
pull(differences)
p_twotailed <- length(extreme_diffs) / 1000
extreme_diffs <- data.frame(differences) |>
filter(abs(differences >= mean(a) - mean(b))) |>
pull(differences)
rlang::last_trace()
extreme_diffs <- data.frame(differences)
filter(abs(differences >= mean(a) - mean(b)))
extreme_diffs <- data.frame(differences) |>
filter(abs(differences) >= mean(a) - mean(b)) |>
pull(differences)
p_twotailed <- length(extreme_diffs) / 1000
library(tidyverse)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
data.frame(differences_small) %>%
ggplot(aes(differences_small)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(differences_small >= mean(a) - mean(b)) |>
pull(differences_small)
p_onetailed_small <- length(extreme_diffs_small) / 1000
# Two-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(abs(differences_small) >= mean(a) - mean(b)) |>
pull(differences_small)
p_twotailed_small <- length(extreme_diffs_small) / 1000
library(tidyverse)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
set.seed(1)
# Population
A <- rnorm(1000, mean = 100, sd = 10)
B <- rnorm(1000, mean = 92, sd = 10)
# Sample
a <- sample(A, 15, replace = FALSE)
b <- sample(B, 15, replace = FALSE)
# Using a t-test to compare the groups (population(s))
t.test(a, b, paired = FALSE)
library(tidyverse)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
data.frame(differences_small) %>%
ggplot(aes(differences_small)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(differences_small >= mean(a) - mean(b)) |>
pull(differences_small)
p_onetailed_small <- length(extreme_diffs_small) / 1000
# Two-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(abs(differences_small) >= mean(a) - mean(b)) |>
pull(differences_small)
p_twotailed_small <- length(extreme_diffs_small) / 1000
library(tidyverse)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
library(tidyverse)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
data.frame(differences_small) %>%
ggplot(aes(differences_small)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(differences_small >= mean(a) - mean(b)) |>
pull(differences_small)
p_onetailed_small <- length(extreme_diffs_small) / 1000
# Two-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(abs(differences_small) >= mean(a) - mean(b)) |>
pull(differences_small)
p_twotailed_small <- length(extreme_diffs_small) / 1000
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
set.seed(1)
# Population
A <- rnorm(1000, mean = 100, sd = 10)
B <- rnorm(1000, mean = 92, sd = 10)
# Sample
a <- sample(A, 50, replace = FALSE)
b <- sample(B, 50, replace = FALSE)
# Using a t-test to compare the groups (population(s))
t.test(a, b, paired = FALSE)
library(tidyverse)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
library(tidyverse)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
data.frame(differences_small) %>%
ggplot(aes(differences_small)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(differences_small >= mean(a) - mean(b)) |>
pull(differences_small)
p_onetailed_small <- length(extreme_diffs_small) / 1000
# Two-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(abs(differences_small) >= mean(a) - mean(b)) |>
pull(differences_small)
p_twotailed_small <- length(extreme_diffs_small) / 1000
library(tidyverse)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
library(tidyverse)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
library(tidyverse)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
set.seed(1)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
library(tidyverse)
set.seed(1)
differences_small <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 10, replace = FALSE)
differences_small[i] <- mean(samp[1:5]) - mean(samp[6:10])
}
data.frame(differences_small) %>%
ggplot(aes(differences_small)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(differences_small >= mean(a) - mean(b)) |>
pull(differences_small)
p_onetailed_small <- length(extreme_diffs_small) / 1000
# Two-tailed p-value
extreme_diffs_small <- data.frame(differences_small) |>
filter(abs(differences_small) >= mean(a) - mean(b)) |>
pull(differences_small)
p_twotailed_small <- length(extreme_diffs_small) / 1000
library(tidyverse)
set.seed(1)
differences_large <- vector()
for(i in 1:1000) {
samp <- sample(c(a, b), 100, replace = FALSE)
differences_large[i] <- mean(samp[1:50]) - mean(samp[51:100])
}
data.frame(differences_large) %>%
ggplot(aes(differences_large)) + geom_histogram() +
geom_vline(xintercept = mean(a) - mean(b), color = "red", size = 2)
# One-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(differences_large >= mean(a) - mean(b)) |>
pull(differences_large)
p_onetailed_large <- length(extreme_diffs_large) / 1000
# Two-tailed p-value
extreme_diffs_large <- data.frame(differences_large) |>
filter(abs(differences_large) >= mean(a) - mean(b)) |>
pull(differences_large)
p_twotailed_large <- length(extreme_diffs_large) / 1000
setwd("~/01-R Studio projects/Mappeeksamen")
